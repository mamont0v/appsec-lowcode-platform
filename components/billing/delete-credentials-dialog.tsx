"use client";


import React, { useState } from 'react'
import {
    AlertDialog,
    AlertDialogAction,
    AlertDialogCancel,
    AlertDialogContent,
    AlertDialogDescription,
    AlertDialogFooter,
    AlertDialogHeader,
    AlertDialogTitle,
    AlertDialogTrigger,
} from "@/components/ui/alert-dialog"
import { Input } from '@/components/ui/input';
import { useMutation } from '@tanstack/react-query';
import DeleteWorkflow from '@/actions/workflows/delete-workflow';
import { toast } from 'sonner';
import { Button } from '../ui/button';
import { XIcon } from 'lucide-react';
import { DeleteCredentialsForUser } from '@/actions/credentials/delete-credentials-for-user';


interface Props {
    name: string;
}

function DeleteCredentialsDialog({ name }: Props) {
    const [open, setOpen] = useState(false);

    const [confirmText, setConfirmText] = useState("")

    const deleteMutation = useMutation({
        mutationFn: DeleteCredentialsForUser,
        onSuccess: () => {
            toast.success("–£—á–µ—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ —É–¥–∞–ª–µ–Ω—ã", { id: name });
            setConfirmText("");
        },
        onError: () => {
            toast.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ —É—á–µ—Ç–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö", { id: name })
        }
    })


    return (
        <AlertDialog open={open} onOpenChange={setOpen}>

            <AlertDialogTrigger asChild>
                <Button variant={"destructive"} size={"icon"}>
                    <XIcon size={18} />
                </Button>
            </AlertDialogTrigger>

            <AlertDialogContent>
                <AlertDialogHeader>
                    <AlertDialogTitle>–í—ã —Ç–æ—á–Ω–æ —É–≤–µ—Ä–µ–Ω—ã?</AlertDialogTitle>
                    <AlertDialogDescription>
                        –ï—Å–ª–∏ –≤—ã —É–¥–∞–ª–∏—Ç–µ —ç—Ç–æ—Ç —Ä–∞–±–æ—á–∏–π –ø—Ä–æ—Ü–µ—Å—Å, –≤—ã –Ω–µ —Å–º–æ–∂–µ—Ç–µ –µ–≥–æ –±–æ–ª—å—à–µ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–∏—Ç—å.
                    </AlertDialogDescription>
                    <div className="flex flex-col py-4 gap-2 items-center">
                        <p>–ï—Å–ª–∏ –≤—ã —É–≤–µ—Ä–µ–Ω—ã, –≤–≤–µ–¥–∏—Ç–µ –ø–æ–ª–Ω–æ—Å—Ç—å—é –Ω–∞–∑–≤–∞–Ω–∏–µ —É—á–µ—Ç–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö <b>{name}</b> –≤ –ø–æ–ª–µ –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è.</p>
                        <Input value={confirmText} onChange={(event) => setConfirmText(event.target.value)} />
                    </div>
                </AlertDialogHeader>
                <AlertDialogFooter>
                    <AlertDialogCancel onClick={() => setConfirmText("")}>
                        –û—Ç–º–µ–Ω–∏—Ç—å
                    </AlertDialogCancel>
                    <AlertDialogAction
                        disabled={confirmText !== name || deleteMutation.isPending}
                        className='bg-destructive text-destructive-foreground hover:bg-destructive/90'
                        onClick={(event) => {
                            event.stopPropagation();
                            toast.loading("–£–¥–∞–ª–µ–Ω–∏–µ —É—á–µ—Ç–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö...", { id: name });
                            deleteMutation.mutate(name);
                        }}
                    >
                        –£–¥–∞–ª–∏—Ç—å üíÄ
                    </AlertDialogAction>
                </AlertDialogFooter>
            </AlertDialogContent>
        </AlertDialog>
    )
}

export default DeleteCredentialsDialog;